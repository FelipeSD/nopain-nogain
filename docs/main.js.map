{"version":3,"sources":["./src/app/service/auth.service.ts","./src/environments/environment.ts","./src/app/workout-list/workout-list.component.ts","./src/app/workout-list/workout-list.component.html","./src/app/service/client.service.ts","./src/app/measure.pipe.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/client-form/client-form.component.ts","./src/app/client-form/client-form.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/workout-form/workout-form.component.ts","./src/app/workout-form/workout-form.component.html","./src/app/guard/auth.guard.ts","./src/app/service/workout.service.ts","./src/app/client-list/client-list.component.html","./src/app/client-list/client-list.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\nimport firebase from 'firebase/app';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  \r\n  user;\r\n  authStatusSub;\r\n  currentAuthStatus;\r\n\r\n  constructor(\r\n    private firebaseAuth: AngularFireAuth,\r\n    public router: Router,\r\n  ) { \r\n    this.authStatusSub = new BehaviorSubject(this.user);\r\n    this.currentAuthStatus = this.authStatusSub.asObservable();\r\n    \r\n    this.checkAuthState();\r\n  }\r\n\r\n  checkAuthState(){\r\n    this.firebaseAuth.authState.subscribe(user => {\r\n      if (user) {\r\n        this.user = user;\r\n        this.authStatusSub.next(user);\r\n      } else {\r\n        this.authStatusSub.next(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  signInWithGoogle() {\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n    provider.setCustomParameters({\r\n      prompt: 'select_account'\r\n    });\r\n    \r\n    return this.firebaseAuth.signInWithPopup(provider).then(()=>{\r\n      this.checkAuthState();\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n  logout(){\r\n    return this.firebaseAuth.signOut().then(() => {\r\n      this.checkAuthState();\r\n      this.router.navigate(['/']);\r\n    })\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: 'AIzaSyAuoVaO6td3Z7aRJrXTmXwf4f1j1JBiXVY',\r\n    authDomain: 'nopain-nogain-4182b.firebaseapp.com',\r\n    projectId: 'nopain-nogain-4182b',\r\n    storageBucket: 'nopain-nogain-4182b.appspot.com',\r\n    messagingSenderId: '986551506789',\r\n    appId: '1:986551506789:web:25cc878a62477f565a738c',\r\n    measurementId: 'G-NR9YZZBS8B'\r\n  },\r\n  apiUrl: 'http://localhost:3000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ClientService } from '../service/client.service';\r\nimport { Client } from '../interface/client';\r\nimport { WorkoutList } from '../interface/workoutList';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-workout-list',\r\n  templateUrl: './workout-list.component.html',\r\n  styleUrls: ['./workout-list.component.css']\r\n})\r\nexport class WorkoutListComponent implements OnInit {\r\n  findClientForm: FormGroup;\r\n\r\n  selectedClient: Client;\r\n  workoutList: WorkoutList[];\r\n\r\n  clientList: Client[];\r\n  currentUser;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    public clientService :ClientService, \r\n    private titleService:Title,\r\n    private authService: AuthService\r\n  ) {\r\n    this.authService.currentAuthStatus.subscribe(authStatus => {\r\n      this.currentUser = authStatus;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.titleService.setTitle(\"Gym App | Workout list\");\r\n\r\n    this.findClientForm = new FormGroup({\r\n      owner: new FormControl('')\r\n    });\r\n    \r\n    let userId = this.currentUser.uid;\r\n\r\n    this.clientService.getAll(userId).subscribe((res)=>{\r\n      this.clientList = res;\r\n\r\n      let clientId = this.route.snapshot.paramMap.get(\"client\");\r\n      if(clientId){\r\n        this.findClientForm.get(\"owner\").setValue(clientId);\r\n        this.onChange(clientId);\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange(value : string){\r\n    this.selectedClient = null;\r\n    this.workoutList = [];\r\n\r\n    let userId = this.currentUser.uid;\r\n\r\n    this.clientService.get(userId, value).subscribe((res: Client)=>{\r\n      this.selectedClient = res;\r\n      this.clientService.getWorkoutList(userId, res._id).subscribe((workoutRes)=>{\r\n        this.workoutList = workoutRes;\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","<section class=\"container my-4\">\n    <form [formGroup]=\"findClientForm\">\n        <h3 class=\"my-5\">Find client's workout list</h3>\n        <div class=\"form-row\">\n            <div class=\"col-12\">\n                <div class=\"form-group\">\n                    <label for=\"owner\">Client:</label>\n                    <select class=\"form-control\" \n                        #clientOwner\n                        formControlName=\"owner\" \n                        id=\"owner\" \n                        (change)=\"onChange(clientOwner.value)\">\n                        <option *ngFor=\"let client of clientList\" value=\"{{client._id}}\">\n                            {{client.name}}\n                        </option>\n                    </select>\n                </div>\n            </div>\n        </div>\n    </form>\n\n    \n    <article *ngIf=\"selectedClient\">\n        <hr class=\"my-3 border\">\n        <h4>Information:</h4>\n        <div class=\"my-4\">\n            <p>Name: {{selectedClient.name}}</p>\n            <p>Gender: {{selectedClient.gender}}</p>\n            <p>Age: {{selectedClient.age}}</p>\n            <p>Weight: {{selectedClient.weight}}</p>\n            <p>Height: {{selectedClient.height | measure}}</p>\n        </div>\n        <div class=\"row my-4\" *ngIf=\"workoutList.length\">\n            <div class=\"col-sm-6 mb-3\" *ngFor=\"let workout of workoutList\">\n                <div class=\"card exercise-card\">\n                    <div class=\"position-relative\">\n                        <a routerLink=\"/workout/update/{{workout._id}}\" class=\"btn btn-info icon-button icon-edit\">\n                            <i class=\"fas fa-edit\"></i>\n                        </a>\n                        <a routerLink=\"/workout/delete/{{workout._id}}\" class=\"btn btn-danger icon-button icon-delete\">\n                            <i class=\"fas fa-trash-alt\"></i>\n                        </a>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">                            \n                            <div class=\"col-sm-6\">\n                                <div class=\"form-group\">\n                                    <label>Exercise:</label>\n                                    <p>{{workout.exercise}}</p>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"weight\">Weight:</label>\n                                    <p>{{workout.weight}}</p>\n                                </div>\n                            </div>\n\n                            <div class=\"col-sm\">\n                                <div class=\"form-group\">\n                                    <label for=\"repetition\">Repetition:</label>\n                                    <p>{{workout.repetition}}</p>\n                                </div>\n                            </div>\n                            <div class=\"col-sm\">\n                                <div class=\"form-group\">\n                                    <label for=\"restTime\">Rest time:</label>\n                                    <p>{{workout.restTime}}</p>\n                                </div>\n                            </div>\n                            <div class=\"w-100\"></div>\n                            <div class=\"col-sm\">\n                                <div class=\"form-group\">\n                                    <label for=\"sets\">Sets:</label>\n                                    <p>{{workout.sets}}</p>\n                                </div>\n                            </div>\n                            <div class=\"col-sm\">\n                                <div class=\"form-group\">\n                                    <label for=\"frequency\">Frequency:</label>\n                                    <p>{{workout.frequency}}</p>\n                                </div>\n                            </div>\n\n                            <div class=\"col-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"notes\">Notes:</label>\n                                    <p>{{workout.notes}}</p>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </article>\n</section>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Client } from '../interface/client';\r\nimport { WorkoutList } from '../interface/workoutList';\r\n\r\n\r\nconst urlBase = `${environment.apiUrl}/client`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(userId: string): Observable<Client[]> {\r\n    return this.http.post<Client[]>(`${urlBase}/findAll`, {userId});\r\n  }\r\n\r\n  getWorkoutList(userId: string, clientId : string): Observable<WorkoutList[]> {\r\n    const options = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      body: {\r\n        userId\r\n      }\r\n    };\r\n\r\n    return this.http.get<WorkoutList[]>(`${urlBase}/${clientId}/trainingSheets`, options);\r\n  }\r\n\r\n  get(userId: string, clientId : string): Observable<Client> {\r\n    return this.http.post<Client>(`${urlBase}/findOne`, {\r\n      _id: clientId,\r\n      userId\r\n    });\r\n  }\r\n\r\n  update(id : string, data : Client) : Observable<Client> {\r\n    return this.http.put<Client>(`${urlBase}/${id}`, data);\r\n  }\r\n\r\n  create(data: Client): Observable<Client> {\r\n    return this.http.post<Client>(urlBase, data);\r\n  }\r\n\r\n  delete(userId: string, clientId: string){\r\n    const options = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      body: {\r\n        userId\r\n      }\r\n    };\r\n    return this.http.delete(`${urlBase}/${clientId}`, options);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'measure'\n})\nexport class MeasurePipe implements PipeTransform {\n\n  transform(value: number, extension: string = \"m\"): string {\n    return (value/100).toFixed(2) + extension;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css', './dashboard.media.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(\n    private titleService:Title\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Gym App | Dashboard\");\n\n  }\n  \n}\n","<section class=\"nopain-nogain\">\n    <div class=\"title\">\n        <div class=\"position-relative\">\n            <div class=\"animated-border\">\n                <i id=\"weight-icon\" class=\"fas fa-dumbbell rotate-45\"></i>\n            </div>\n        </div>\n        <div class=\"text\">\n            <p>NO PAIN,</p> \n            <p class=\"phrase2\">NO GAIN</p>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ClientService } from '../service/client.service';\r\nimport { Client } from '../interface/client';\r\nimport { Location } from '@angular/common';\r\nimport {Title} from '@angular/platform-browser';\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-client-form',\r\n  templateUrl: './client-form.component.html',\r\n  styleUrls: ['./client-form.component.css']\r\n})\r\nexport class ClientFormComponent implements OnInit {\r\n  clientForm: FormGroup;\r\n  currentUser;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public service: ClientService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private local: Location,\r\n    private titleService: Title,\r\n\r\n    private authService: AuthService\r\n  ) {\r\n\r\n    this.authService.currentAuthStatus.subscribe(authStatus => {\r\n      this.currentUser = authStatus;\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.titleService.setTitle('Gym App | Client form');\r\n\r\n    if (/delete/gi.test(this.router.url)){\r\n      this.activatedRoute.params.subscribe(params => {\r\n        const id = params.id;\r\n        this.deleteClient(id);\r\n      });\r\n    }else{ // add and updated\r\n      this.clientForm = new FormGroup({\r\n        name: new FormControl(''),\r\n        weight: new FormControl(),\r\n        age: new FormControl(),\r\n        height: new FormControl(),\r\n        gender: new FormControl()\r\n      });\r\n\r\n      if (/update/gi.test(this.router.url)){\r\n        this.activatedRoute.params.subscribe(params => {\r\n          const id = params.id;\r\n          this.getClient(id);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit(e): void{\r\n    const formValue = this.clientForm.value;\r\n\r\n    // validate form\r\n    if (formValue.name){\r\n      // check action\r\n      if (/update/gi.test(this.router.url)){\r\n        formValue.userId = this.currentUser.uid;\r\n        this.activatedRoute.params.subscribe(params => {\r\n          const id = params.id;\r\n          this.updateClient(id, formValue);\r\n        });\r\n      }else if (/new/gi.test(this.router.url)){\r\n        this.addClient(formValue);\r\n      }\r\n    }else{\r\n      alert('Please, fill out the client\\'s name (required)');\r\n    }\r\n  }\r\n\r\n  addClient(objForm: Client): void{\r\n    if (this.currentUser && this.currentUser.uid){\r\n      objForm.userId = this.currentUser.uid;\r\n      this.service.create(objForm).subscribe((res) => {\r\n        this.clientForm.reset();\r\n        alert('New client successfully added');\r\n      });\r\n    }else{\r\n      alert('You must be logged in to add a client');\r\n    }\r\n  }\r\n\r\n  updateClient(id: string, objForm: Client): void{\r\n    objForm.userId = this.currentUser.uid;\r\n    this.service.update(id, objForm).subscribe((res) => {\r\n      this.clientForm.reset();\r\n      alert('Client successfuly updated');\r\n      this.router.navigate(['client/list']);\r\n    });\r\n  }\r\n\r\n  deleteClient(id: string): void{\r\n    const userId = this.currentUser.uid;\r\n\r\n    this.service.delete(userId, id).subscribe((res) => {\r\n      alert('Client successfuly deleted');\r\n      this.local.back();\r\n    });\r\n  }\r\n\r\n  getClient(id: string): void{\r\n    const userId = this.currentUser.uid;\r\n    this.service.get(userId, id).subscribe((res) => {\r\n      // tslint:disable-next-line:forin\r\n      for (const elem in res){\r\n        const formElement = this.clientForm.get(elem);\r\n        if (formElement){\r\n          formElement.setValue(res[elem]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<section class=\"container\">\n    <form [formGroup]=\"clientForm\" (ngSubmit)=\"onSubmit(this)\" *ngIf=\"clientForm\">\n        <h3 class=\"my-5\">Client register</h3>\n        <div class=\"form-row\">\n            <div class=\"col-sm-8\">\n                <div class=\"form-group\">\n                    <label for=\"name\">Name:</label>\n                    <input class=\"form-control\" formControlName=\"name\" type=\"text\" id=\"name\">\n                </div>\n            </div>\n            <div class=\"col-sm-4\">\n                <div class=\"form-group\">\n                    <label for=\"age\">Age:</label>\n                    <input class=\"form-control\" formControlName=\"age\" type=\"text\" id=\"age\">\n                </div>\n            </div>\n\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"weight\">Weight:</label>\n                    <input class=\"form-control\" formControlName=\"weight\" type=\"text\" id=\"weight\">\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"height\">Height:</label>\n                    <input class=\"form-control\" formControlName=\"height\" type=\"text\" id=\"height\">\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"gender\">Gender:</label>\n                    <select class=\"form-control\" formControlName=\"gender\" id=\"gender\">\n                        <option value=\"male\">Male</option>\n                        <option value=\"female\">Female</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"d-flex mt-3\">\n            <div class=\"ml-auto\">\n                <button type=\"reset\" class=\"btn btn-outline-secondary mr-2\" (click)=\"resetForm\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-outline-warning\">Save</button>\n            </div>\n        </div>\n    </form>\n</section>","<header>\r\n  <div class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-dark box-shadow\">\r\n    <a class=\"my-0 mr-md-auto font-weight-normal text-white\" routerLink=\"/\">\r\n      <h5 class=\"\">\r\n        <img src=\"./assets/logo.png\" alt=\"Logo\" style=\"width: 50px; height: 50px\">\r\n        <span class=\"ml-2\">Gym App</span>\r\n      </h5>\r\n    </a>\r\n\r\n    <nav class=\"my-2 my-md-0 mr-md-3\">\r\n      <div class=\"\" *ngIf=\"isLoggedIn; else loggedOut\">\r\n        <a class=\"p-3 p-md-4 text-white\" routerLink=\"client/list\">Client list</a>\r\n        <a class=\"p-3 p-md-4 text-white\" routerLink=\"client/new\">Register Client</a>\r\n        <a class=\"p-3 p-md-4 text-white\" routerLink=\"workout/new\">Register Workout List</a>\r\n        <a class=\"p-3 p-md-4 text-white\" routerLink=\"workout/list\">Check Workout List</a>\r\n        <a class=\"text-white btn btn-sm btn-outline-primary\" (click)=\"onLogout()\">Logout</a>\r\n      </div>\r\n      <ng-template #loggedOut>\r\n          <button ngbDropdownItem\r\n                  class=\"btn btn-danger\"\r\n                  (click)=\"onSignIn()\">\r\n            <i class=\"fab fa-google mr-1\"></i>\r\n            Sign in with Google\r\n          </button>\r\n      </ng-template>\r\n    </nav>\r\n  </div>\r\n</header>\r\n<main class=\"section\">\r\n  <router-outlet></router-outlet>\r\n</main>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Gym app';\r\n  isLoggedIn;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n  ){\r\n  }\r\n\r\n  ngOnInit(): void{\r\n    this.authService.checkAuthState();\r\n    this.authService.currentAuthStatus.subscribe(authStatus => {\r\n      this.isLoggedIn = authStatus;\r\n    });\r\n  }\r\n\r\n  onSignIn(): void {\r\n    this.authService.signInWithGoogle();\r\n  }\r\n\r\n  onLogout(): void{\r\n    this.authService.logout();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { WorkoutFormComponent } from './workout-form/workout-form.component';\r\nimport { ClientFormComponent } from './client-form/client-form.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { WorkoutListComponent } from './workout-list/workout-list.component';\r\nimport { ClientListComponent } from './client-list/client-list.component';\r\nimport { MeasurePipe } from './measure.pipe';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthGuard } from './guard/auth.guard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    WorkoutFormComponent,\r\n    ClientFormComponent,\r\n    WorkoutListComponent,\r\n    ClientListComponent,\r\n    MeasurePipe,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot([]),\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig, 'angular-auth-firebase'),\r\n    AngularFireAuthModule\r\n  ],\r\n  providers: [AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { WorkoutService } from '../service/workout.service';\r\nimport { WorkoutList } from '../interface/workoutList';\r\nimport { Location } from '@angular/common';\r\nimport { Client } from '../interface/client';\r\nimport { ClientService } from '../service/client.service';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-workout-form',\r\n  templateUrl: './workout-form.component.html',\r\n  styleUrls: ['./workout-form.component.css']\r\n})\r\nexport class WorkoutFormComponent implements OnInit {\r\n  workoutForm: FormGroup;\r\n  \r\n  clientList: Client[];\r\n  currentUser;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public service: WorkoutService,\r\n    public clientService:  ClientService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private local: Location,\r\n    private titleService:Title,\r\n    private authService: AuthService\r\n\r\n  ) {\r\n    this.authService.currentAuthStatus.subscribe(authStatus => {\r\n      this.currentUser = authStatus;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.titleService.setTitle(\"Gym App | Workout form\");\r\n    \r\n    let userId = this.currentUser.uid;\r\n\r\n    this.clientService.getAll(userId).subscribe((res)=>{\r\n      this.clientList = res;\r\n    })\r\n\r\n    if(/delete/gi.test(this.router.url)){\r\n      this.activatedRoute.params.subscribe(params => {\r\n        let id = params['id'];\r\n        this.deleteWorkout(id);\r\n      });\r\n    }else{ // add and updated\r\n      this.workoutForm = new FormGroup({\r\n        exercise: new FormControl(''),\r\n        weight: new FormControl(), // kg\r\n        repetition: new FormControl(), //int - how many times until stop\r\n        restTime: new FormControl(),// seconds - allow the muscle to recover - usually in the range of 30 seconds to two minutes\r\n        sets: new FormControl(), // int - series of repetitions to complete the exercise\r\n        frequency: new FormControl(),\r\n        notes: new FormControl(),\r\n        owner: new FormControl(),\r\n      });\r\n\r\n      if(/update/gi.test(this.router.url)){\r\n        this.activatedRoute.params.subscribe(params => {\r\n          let id = params['id'];\r\n          this.getWorkout(id);\r\n        });\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  onSubmit(e){\r\n    let formValue = this.workoutForm.value;\r\n\r\n    // validate form\r\n    if(formValue[\"exercise\"] && formValue[\"owner\"]){\r\n\r\n      // check action\r\n      if(/update/gi.test(this.router.url)){\r\n        formValue.userId = this.currentUser.uid;\r\n\r\n        this.activatedRoute.params.subscribe(params => {\r\n          let id = params['id'];\r\n          this.updateWorkout(id, formValue);\r\n        });\r\n\r\n      }else if(/new/gi.test(this.router.url)){\r\n\r\n        this.addWorkout(formValue);\r\n\r\n      }\r\n\r\n    }else{\r\n      alert(\"Please, fill out the exercise name and select a trainer (required)\");\r\n    }\r\n  }\r\n\r\n  addWorkout(objForm: WorkoutList){\r\n    if(this.currentUser && this.currentUser.uid){\r\n      let data = {\r\n        \"userId\": this.currentUser.uid,\r\n        ...objForm,\r\n      };\r\n      this.service.create(data).subscribe((res)=>{\r\n        this.workoutForm.reset();\r\n        alert(\"New workout successfuly added\");\r\n      });\r\n    }\r\n  }\r\n\r\n  updateWorkout(id: string, objForm: WorkoutList){\r\n    console.log(objForm);\r\n    this.service.update(id, objForm).subscribe((res)=>{\r\n      this.workoutForm.reset();\r\n      alert(\"Workout successfuly updated\");\r\n      this.router.navigate(['workout/list', {\"client\": objForm.owner}]);\r\n    });\r\n  }\r\n\r\n  deleteWorkout(id: string){\r\n    this.service.delete(id).subscribe((res)=>{\r\n      alert(\"Workout successfuly deleted\");\r\n      this.local.back();\r\n    });\r\n  }\r\n\r\n  getWorkout(workoutId: string){\r\n    let userId = this.currentUser.uid;\r\n    \r\n    this.service.get(userId, workoutId).subscribe((res)=>{\r\n\r\n      for(let elem in res){\r\n        let formElement = this.workoutForm.get(elem);\r\n        if(formElement){\r\n          formElement.setValue(res[elem])\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<section class=\"container\">\n    <form [formGroup]=\"workoutForm\" (ngSubmit)=\"onSubmit(this)\" *ngIf=\"workoutForm\">\n        <h3 class=\"my-5\">Workout register</h3>\n        <div class=\"form-row\">\n\n            <div class=\"col-12\">\n                <div class=\"form-group\">\n                    <label for=\"owner\">Client owner:</label>\n                    <select class=\"form-control\" \n                        #clientOwner\n                        formControlName=\"owner\" \n                        id=\"owner\">\n                        <option *ngFor=\"let client of clientList\" value=\"{{client._id}}\">\n                            {{client.name}}\n                        </option>>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"col-sm-8\">\n                <div class=\"form-group\">\n                    <label for=\"exercise\">Exercise:</label>\n                    <input class=\"form-control\" formControlName=\"exercise\" type=\"text\" id=\"exercise\">\n                </div>\n            </div>\n            <div class=\"col-sm-4\">\n                <div class=\"form-group\">\n                    <label for=\"weight\">Weight:</label>\n                    <input class=\"form-control\" formControlName=\"weight\" type=\"number\"  min=\"0\" max=\"300\" id=\"weight\">\n                </div>\n            </div>\n\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"repetition\">Repetition:</label>\n                    <input class=\"form-control\" formControlName=\"repetition\" type=\"number\"  min=\"0\" max=\"300\" id=\"repetition\">\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"restTime\">Rest time:</label>\n                    <input class=\"form-control\" formControlName=\"restTime\" type=\"number\"  min=\"0\" max=\"300\" id=\"restTime\">\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"sets\">Sets:</label>\n                    <input class=\"form-control\" formControlName=\"sets\" type=\"number\"  min=\"0\" max=\"300\" id=\"sets\">\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"frequency\">Frequency:</label>\n                    <select class=\"form-control\" formControlName=\"frequency\" id=\"frequency\">\n                        <option value=\"Diary\" selected>Diary</option>\n                        <option value=\"1 time/week\">1 time/week</option>\n                        <option value=\"2 times/week\">2 times/week</option>\n                        <option value=\"3 times/week\">3 times/week</option>\n                        <option value=\"4 times/week\">4 times/week</option>\n                    </select>                \n                </div>\n            </div>\n\n            <div class=\"col-12\">\n                <div class=\"form-group\">\n                    <label for=\"notes\">Notes:</label>\n                    <textarea class=\"form-control\" formControlName=\"notes\" id=\"notes\"></textarea>\n                </div>\n            </div>           \n             \n        </div>\n        <div class=\"d-flex mt-3\">\n            <div class=\"ml-auto\">\n                <button type=\"reset\" class=\"btn btn-outline-secondary mr-2\">Cancel</button>\n                <button type=\"submit\" class=\"btn btn-outline-warning\">Save</button>\n            </div>\n        </div>\n    </form>\n</section>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    public authService: AuthService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    this.authService.checkAuthState();\r\n    this.authService.currentAuthStatus.subscribe(authStatus => {\r\n      if (!authStatus){\r\n        this.router.navigate(['/']);\r\n      }\r\n    });\r\n\r\n    return true;\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Client } from '../interface/client';\r\nimport { WorkoutList } from '../interface/workoutList';\r\n\r\n\r\nconst urlBase = `${environment.apiUrl}/trainingSheet`;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WorkoutService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<WorkoutList[]> {\r\n    return this.http.get<WorkoutList[]>(urlBase);\r\n  }\r\n\r\n  get(userId: string, workoutId: string): Observable<WorkoutList> {\r\n    const options = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      body: {\r\n        userId\r\n      }\r\n    };\r\n\r\n    return this.http.get<WorkoutList>(`${urlBase}/${workoutId}`, options);\r\n  }\r\n\r\n  getOwner(id: string): Observable<Client> {\r\n    return this.http.get<Client>(`${urlBase}/${id}/ownerClient`);\r\n  }\r\n\r\n  update(id: string, data: WorkoutList): Observable<WorkoutList> {\r\n    return this.http.put<WorkoutList>(`${urlBase}/${id}`, data);\r\n  }\r\n\r\n  create(data: WorkoutList): Observable<WorkoutList> {\r\n    return this.http.post<WorkoutList>(urlBase, data);\r\n  }\r\n\r\n  delete(id: string){\r\n    return this.http.delete(`${urlBase}/${id}`);\r\n  }\r\n}\r\n","<section class=\"container\">\n    <h3 class=\"my-5\">Clients list</h3>\n\n    <table class=\"table table-dark table-striped table-responsive-sm\">\n        <thead>\n            <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Age</th>\n                <th scope=\"col\">Height</th>\n                <th scope=\"col\">Weight</th>\n                <th scope=\"col\">Gender</th>\n                <th class=\"text-center\" scope=\"col\">Options</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let client of clients\">\n                <td>\n                    <a class=\"text-white\" [routerLink]=\"['/workout/list', {client: client._id }]\">\n                        {{client.name}}\n                    </a>\n                </td>\n                <td>{{client.age}}</td>\n                <td>{{client.height}}</td>\n                <td>{{client.weight}}</td>\n                <td>{{client.gender}}</td>\n                <td class=\"text-center\">\n                    <a class=\"btn btn-sm btn-outline-warning mr-2\" routerLink=\"/client/update/{{client._id}}\">\n                        <i class=\"fas fa-edit\"></i>\n                    </a>\n                    <a class=\"btn btn-sm btn-outline-danger\" routerLink=\"/client/delete/{{client._id}}\">\n                        <i class=\"fas fa-trash-alt\"></i>\n                    </a>\n                </td>\n            </tr>\n\n        </tbody>\n    </table>\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { ClientService } from '../service/client.service';\r\nimport { Client } from '../interface/client';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-client-list',\r\n  templateUrl: './client-list.component.html',\r\n  styleUrls: ['./client-list.component.css']\r\n})\r\nexport class ClientListComponent implements OnInit {\r\n  clients: Client[];\r\n  currentUser;\r\n\r\n  constructor(\r\n    public service: ClientService,\r\n    private titleService:Title,\r\n    private authService: AuthService\r\n  ) {\r\n    this.authService.currentAuthStatus.subscribe(authStatus => {\r\n      this.currentUser = authStatus;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.titleService.setTitle(\"Gym App | Client list\");\r\n    let userId = this.currentUser.uid;\r\n    this.service.getAll(userId).subscribe((res)=>{\r\n      this.clients = res;\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientFormComponent } from './client-form/client-form.component';\r\nimport { ClientListComponent } from './client-list/client-list.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AuthGuard } from './guard/auth.guard';\r\nimport { WorkoutFormComponent } from './workout-form/workout-form.component';\r\nimport { WorkoutListComponent } from './workout-list/workout-list.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: DashboardComponent, pathMatch: 'full'},\r\n\r\n  {path: 'workout/new', component: WorkoutFormComponent,  canActivate: [AuthGuard]},\r\n  {path: 'workout/delete/:id', component: WorkoutFormComponent,  canActivate: [AuthGuard]},\r\n  {path: 'workout/update/:id', component: WorkoutFormComponent,  canActivate: [AuthGuard]},\r\n  {path: 'workout/list', component: WorkoutListComponent,  canActivate: [AuthGuard]},\r\n\r\n  {path: 'client/list', component: ClientListComponent,  canActivate: [AuthGuard]},\r\n  {path: 'client/new', component: ClientFormComponent,  canActivate: [AuthGuard]},\r\n  {path: 'client/update/:id', component: ClientFormComponent,  canActivate: [AuthGuard]},\r\n  {path: 'client/delete/:id', component: ClientFormComponent,  canActivate: [AuthGuard]},\r\n\r\n  // { path: '**', component: PageNotFoundComponent },  // Wildcard route for a 404 page\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}